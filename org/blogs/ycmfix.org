#+TITLE: YCM Neovim
#+AUTHOR: Ashley Barrell
#+DESCRIPTION: Fixing auto-completion suggestions
#+EXPORT_FILE_NAME: ../../blogs/ycmfix.html
#+OPTIONS: num:nil toc:nil title:nil
#+HTML_HEAD: <link rel="stylesheet" href="../css/hydehyde.css">

* YCM Autocomplete Fix

#+HTML: <div class="post__meta">
#+HTML:<svg class="svg-inline--fa fa-calendar-alt fa-w-14" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="calendar-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" data-fa-i2svg=""><path fill="currentColor" d="M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm320-196c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM192 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM64 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z"></path></svg>
#+HTML: NOV 29, 2021
#+HTML: </div>

I'll get straight to the point here, if you've installed the [[https://github.com/ycm-core/YouCompleteMe][YouCompleteMe]] plugin for Vim and/or Neovim,
you might've run into a problem with C and/or C++ auto-completion suggestions. The big issue you may
have run into just like me and a bunch of other people is that you're not getting standard library
suggestions and language syntax suggestions. I've found a way to fix it.

** The Fix

The fix itself is really simple. Put this snippet of code into your .vimrc or your init.vim file
if you use Neovim:

#+BEGIN_SRC vimscript
let g:ycm_semantic_triggers = {
	\ 'c': [
	\	'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
	\	'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
	\	'q', 'r', 's', 't', 'u', 'v', 'w', 'x',
	\	'y', 'z'],
\}
#+END_SRC

This might be a bit of a hacky way to do it. So what this does is sets all the
lexicographic characters to trigger ycm. By default for C and C++ has the
dot (.) and arrow (->) operators as the semantic triggers. As these are the
default for the languages, you don't need to add them to our list. Now I'm
not sure if this is the best way to get the auto-completion to work but I found
this way it actually suggests standard library functions and primative types and
functions I've already declared. It'll also show function arguments instead of
just showing the function name.

If you want this to work with C and C++ you just have to add C++ like this:

#+BEGIN_SRC vimscript
let g:ycm_semantic_triggers = {
	\ 'c,cpp': [
	\	'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
	\	'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
	\	'q', 'r', 's', 't', 'u', 'v', 'w', 'x',
	\	'y', 'z'],
\}
#+END_SRC

There is one thing that you need to make sure you have. For ycm to work for
a project, it requires you to have a .ycm_extra_conf.py file for each project.
I don't do this, I have a config file for each langauge in a config directory
and source that when I edit a file based on its extension, like so:

#+BEGIN_SRC vimscript
augroup filetype_c
	autocmd!

	let g:ycm_global_ycm_extra_conf = '~/.config/nvim/config/.ycm_c_conf.py'

	...
augroup END
#+END_SRC

I won't go over the setup of a ycm conf file here but there's an exmaple on the
ycm [[https://github.com/rasendubi/dotfiles/blob/master/.vim/.ycm_extra_conf.py#L51][GitHub]]. I've also based my config off [[https://github.com/rasendubi/dotfiles/blob/master/.vim/.ycm_extra_conf.py][this]] config on GitHub. You do have to
change some things in the flags list and that's the '-std' and 'x' flags. These
change depending on which version of C and C++ you're using. Here's what I have
for C:

#+BEGIN_SRC python
BASE_FLAGS = [
        '-Wall',
        '-Wextra',
        '-Werror',
        '-Wno-long-long',
        '-Wno-variadic-macros',
        '-fexceptions',
        '-ferror-limit=10000',
        '-DNDEBUG',
        '-std=c99',
        '-xc',
        '-DUSE_CLANG_COMPLETER',
        '-I/usr/include/'
        ]
#+END_SRC

Here's what I currently have for C++:

#+BEGIN_SRC python
BASE_FLAGS = [
	'-Wall',
	'-Wextra',
	'-Werror',
	'-Wno-long-long',
	'-Wno-variadic-macros',
	'-fexceptions',
	'-ferror-limit=10000',
	'-DNDEBUG',
	'-std=c++11',
	'-xc++',
	'-DUSE_CLANG_COMPLETER',
	'-I/usr/include/'
	]
#+END_SRC

Hopefully that has fixed the problem for you as it did for me. I've seen a
few posts online and a few videos on YouTube of people saying they haven't
been able to get ycm to work for C and C++. Again I don't know if this is
the best way to get this to work but it can stay as a workaround for now
until someone finds a better way to do so.
